# R.vch

# Packages
## installed.packages()[, 'Package'] %>% sort %>% unique %>% str_c(collapse = ' | ')
### abind | acepack | acs | ade4 | animation | ape | aqp | arm | assertthat | backports | base | base64 | base64enc | bayesm | bayesplot | BH | bindr | bindrcpp | bitops | boa | boot | brew | broom | BRugs | car | caret | caTools | cellranger | censusr | checkmate | checkpoint | choroplethr | choroplethrMaps | chron | class | classInt | cluster | clv | coda | codetools | coefplot | colorRamps | colorspace | colourpicker | commonmark | compiler | countrycode | covr | cowplot | crayon | crosstalk | curl | data.table | datasets | DBI | dbplyr | deldir | deployrRserve | desc | devtools | dichromat | digest | dismo | doParallel | dplyr | DT | dygraphs | e1071 | ecodist | eigeninv | evaluate | expm | feather | filehash | FNN | fontBitstreamVera | fontLiberation | fontquiver | forcats | foreach | foreach | foreign | formatR | Formula | gapminder | gdata | gdtools | geoR | geoRglm | geosphere | GGally | ggmap | ggplot2 | ggplot2movies | ggpubr | ggrepel | ggsci | ggsignif | git2r | glmnet | glue | gmodels | gmp | goftest | graphics | grDevices | grid | gridBase | gridExtra | gstat | gtable | gtools | haven | here | hexbin | highr | Hmisc | hms | htmlTable | htmltools | htmlwidgets | httpuv | httr | idbr | igraph | inline | interplot | intervals | irlba | ISLR | iterators | iterators | jpeg | jsonlite | jsonlite | KernSmooth | kml | knitr | kutils | labeling | laGP | Lahman | lattice | latticeExtra | lavaan | lazyeval | lctools | LearnBayes | lme4 | longitudinalData | loo | lubridate | magic | magrittr | mapdata | mapproj | maps | maptools | maptree | margins | markdown | markovchain | MASS | MASS | matlab | Matrix | MatrixModels | matrixStats | mcmc | MCMCpack | memoise | methods | mgcv | mgcv | mice | microbenchmark | MicrosoftR | mime | miniUI | minqa | misc3d | mnormt | ModelMetrics | modelr | multcomp | multilevel | munsell | mvtnorm | ncf | ndtv | network | networkDynamic | nlme | nlme | nloptr | NMF | nnet | noncensus | numDeriv | nycflights13 | openssl | openxlsx | packrat | pacman | parallel | pbivnorm | pbkrtest | permute | pgirmess | pixmap | pkgconfig | pkgmaker | PKI | plogr | plotKML | plotly | plotrix | plyr | png | polyclip | praise | prediction | prettyunits | progress | proto | pryr | pscl | psych | purrr | quadprog | quantreg | R2OpenBUGS | R6 | R6 | RandomFields | RandomFieldsUtils | randomForest | randomNames | rappdirs | raster | RColorBrewer | Rcpp | RcppArmadillo | RcppEigen | RcppParallel | RCurl | readODS | readr | readstata13 | readxl | registry | rematch | reshape | reshape2 | RevoIOQ | RevoMods | RevoUtils | RevoUtilsMath | rex | rgdal | rgeos | rgl | RgoogleMaps | rio | rJava | rjson | RJSONIO | rlang | rmarkdown | rngtools | rockchalk | RODBC | roxygen2 | rpart | rpart | RPostgreSQL | rprojroot | RSAGA | RSclient | rsconnect | Rserve | rstan | rstanarm | rstantools | rstudioapi | RUnit | rvest | sandwich | scales | selectr | sf | shapefiles | shiny | shinyjs | shinystan | shinythemes | sna | sourcetools | sp | spacetime | SparseM | spatial | SpatialPack | spatstat | spatstat.utils | spBayes | spdep | splancs | splines | srvyr | StanHeaders | statnet.common | stats | stats4 | stringdist | stringi | stringr | survey | survival | svglite | tcltk | tensor | testit | testthat | tgp | TH.data | threejs | tibble | tidyr | tidyselect | tidyverse | tigris | tikzDevice | tint | tools | translations | triebeard | tufte | udunits2 | units | urltools | UScensus2010 | useful | utils | uuid | vdiffr | vegan | viridis | viridisLite | WDI | webshot | weights | whisker | withr | wrapr | xlsx | xlsxjars | XML | xml2 | xtable | xts | yaml | zip | zoo
<package> :=
	( GG plot 2=ggplot2 | G galley=GGally
	| plot Lee=plotly
	| Tidyverse=tidyverse | D plier=dplyr | Tidier=tidyr
	| Reader=readr | tibble | lubridate | feather | Read XL=readxl
	| purr=purrr
	| C data=cdata
	| glue | Stringer=stringr | My greeter=magrittr
	| viridis | Wrapper=wrapr 
	| splines
	| caret | N net=nnet | E 1071=e1071
	| Test that=testthat | R unit=RUnit 
	| developer tools=devtools | remotes | use this=usethis
	| RG doll=rgdal | SF=sf | raster | LA GP=laGP | SP=sp
	| Map tools=maptools | Map data=mapdata
	| GG pub or=ggpubr | choropleth R=choroplethr
	| MASS | mice | String distance=stringdist
	| ISLR | Rock chalk=rockchalk | K utilities=kutils
	| shiny | shiny load test=shinyloadtest
	| here | Pac-Man=pacman | Micro benchmark=microbenchmark
	| base | stats | You till=util
	);
Package <package> = "'" $1 "'";
Prefix <package> = $1 "::";

<functions> :=
	# base
	( function
	| concatenate=c | list | vector | matrix
	| library 
	| If else=ifelse
	| Is not applicable=is.na | Is null=is.null
	| length | lengths | levels
	| Sequence=seq
	| print | dim | dimension=dim
	# stats
	| sample | sequence=seq | mean | median | Standard deviation=sd | Variance=var 
	| Correlation=cor | Covariance=cov
	| Linear model=lm | Generalized linear model=glm
	| QQ plot=qqplot | Coefficients=coef
	| NA omit=na.omit | predict | Principal components=prcomp
	| minimum=min | maximum=max
	# graphics
	| plot | Histogram=hist
	# methods
	
	# utils
	| citation | data | vignette | install packages=install.packages
	| Installed packages=installed.packages | Structure=str | View
	# Introspection
	| class | type of=typeof | Dump as input=dput
	| head | summary | attributes | names | colnames | rownames
	# Help
	# dplyr
	| Add count=add_count | Add row=add_row | Add row names=add_rownames
	| Add tally=add_tally | All equal=all_equal | All variables=all_vars
	| Any variables=any_vars | Arrange all=arrange_all
	| Arrange at=arrange_at | Arrange if=arrange_if
	| Benchmark tables=bench_tbls | between | Bind rows=bind_rows
	| Case when=case_when | coalesce | combine | Compare tables=compare_tbls
	| Compare tables 2=compare_tbls2 | contains | counts
	| Cumulative all=cumall | Cumulative any=cumany | Cumulative mean=cummean
	| Cumulative distribution=cume_dist | Current variables=current_vars
	| Data frame=data_frame | Dense rank=dense_rank | Descending=desc
	| Dimension description=dim_desc | Ends with=ends_with
	| select | filter | mutate | sample n=sample_n
	| rename | rename at=rename_at | recode
	| mutate all=mutate_all | mutate at=mutate_at
	| group by=group_by | summarize=summarise | ungroup
	| variables=vars | functions=funs
	# tidyr
	| complete | nesting | crossing | expand | Drop NA=drop_na | extract | fill
	| Full sequence=full_seq | gather | nest | Replace NA=replace_na | separate
	| Separate rows=separate_rows | spread | unite | unnest
	| inner join=inner_join | left join=left_join | right join=right_join
	| full join=full_join
	# ggplot2
	| Gigi plot=ggplot | AES=aes | geometry histogram=geom_histogram
	| geometry point=geom_point | geometry line=geom_line 
	| geometry simple feature=geom_sf | geometry smooth=geom_smooth
	| geometry error bar=geom_errorbar 
	| geometry horizontal error bar=geom_errorbarh
	| facet wrap=facet_wrap
	| Gigi title=ggtitle | labels=labs | x label=xlab | y label=ylab
	# tibble
	| tibble | tribble
	# purrr
	| map | Map string=map_str | Map double=map_dbl | Map integer=map_int
	| Set names=set_names
	# cdata
	| Move values to rows=moveValuesToRows 
	| Move values to columns=moveValuesToColumns
	# sf
	
	# stringr
	| String concatenate=str_c | String length=str_length
	| String detect=str_detect | String split=str_split
	| String replace=str_replace | String replace all=str_replace_all
	| String replace NA=str_replace_na | String trim=str_trim
	| String to lower=str_to_lower | String to upper=str_to_upper
	| String to title=str_to_title
	# readr
	| Read CSV=read_csv | Write CSV=write_csv
	# here
	| here=here::here
	);
	
Function <functions> = $1 "()" {Left}; 

<logical_operators> := ( And=" && " | Or=" || " );
<boolean_operators> := ( And=" & " | Or=" | " | Not="!" );
Logical <logical_operators> = $1;
Boolean <logical_operators> = $1;
<binary_operator> := 
	( Plus="+" | Minus="-" | Times="*" | Divided by="/"
	| To the power="^" | Exponent="^" | Modulo="%%" | Integer division="%/%"
	| In="%in%" | Matrix multiplication="%*%"
	);
<binary_operator> = $1;
Fat <binary_operator> = " " $1 " ";

# Constants
NA = "NA";
True = "TRUE";
False = "FALSE";

# Keywords
If = "if () {}" {Left} {Enter} {Home} {Up} {Right_4};
Else = " else {}" {Left} {Enter};
For loop = "for ( in ) {}" {Left} {Enter} {Home} {Up} {Right_5};

# Symbols
gets [the value] = {Alt+-};
([Insert] assignment [operator] | [(gets|is)] assigned) = {Alt+-};
Is assigned to = " -> ";

# Pipes
pipe = " %>% ";
Lazy pipe = " %...>% ";
Assignment pipe = " %<>% ";
Exposition pipe = " %$% ";
T pipe = " %T>% ";
# [Insert] pipe [operator] = {Ctrl+Shift+m};

# devtools


# Macros for specific projects
Source [project] settings = "source('project_settings.R')" {Enter};

Pac-Man load = "if (!base::require('pacman')) utils::install.packages('pacman')" {Enter_2} "pacman::p_load(  # Load packages after installing, if necessary." {Enter_2} {Backspace} ")" {Up} {End};
